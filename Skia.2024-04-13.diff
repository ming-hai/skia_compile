diff --git a/DEPS b/DEPS
index 57ede91cf3..33ceac6115 100644
--- a/DEPS
+++ b/DEPS
@@ -22,55 +22,55 @@ vars = {
 # To apply the changes for the GN build, you will need to resync the git repositories using:
 #     ./tools/git-sync-deps
 deps = {
-  "buildtools"                                   : "https://chromium.googlesource.com/chromium/src/buildtools.git@b138e6ce86ae843c42a1a08f37903207bebcca75",
-  "third_party/externals/angle2"                 : "https://chromium.googlesource.com/angle/angle.git@5e790bfb16e8246bdf73e625bd4203ce761b959a",
-  "third_party/externals/brotli"                 : "https://skia.googlesource.com/external/github.com/google/brotli.git@6d03dfbedda1615c4cba1211f8d81735575209c8",
-  "third_party/externals/d3d12allocator"         : "https://skia.googlesource.com/external/github.com/GPUOpen-LibrariesAndSDKs/D3D12MemoryAllocator.git@169895d529dfce00390a20e69c2f516066fe7a3b",
+  #"buildtools"                                   : "https://gitee.com/dengly/depot_tools.git@fcf9fc4c36d6a3b244fd95fbceaa7b9030e67362",
+  "third_party/externals/angle2"                 : "https://gitee.com/openeuler-graphics/angle.git@76a3f05092077c71267cf72071556b363217f3f7",
+  "third_party/externals/brotli"                 : "https://github.com/google/brotli.git@6d03dfbedda1615c4cba1211f8d81735575209c8",
+  "third_party/externals/d3d12allocator"         : "https://github.com/GPUOpen-LibrariesAndSDKs/D3D12MemoryAllocator.git@7597f717c7b32b74d263009ecc15985b517585c7",
   # Dawn requires jinja2 and markupsafe for the code generator, tint for SPIRV compilation, and abseil for string formatting.
   # When the Dawn revision is updated these should be updated from the Dawn DEPS as well.
-  "third_party/externals/dawn"                   : "https://dawn.googlesource.com/dawn.git@0e14373fbbebb5feaa83a5584e96dd818aba7b7f",
-  "third_party/externals/jinja2"                 : "https://chromium.googlesource.com/chromium/src/third_party/jinja2@e2d024354e11cc6b041b0cff032d73f0c7e43a07",
-  "third_party/externals/markupsafe"             : "https://chromium.googlesource.com/chromium/src/third_party/markupsafe@0bad08bb207bbfc1d6f3bbc82b9242b0c50e5794",
-  "third_party/externals/abseil-cpp"             : "https://skia.googlesource.com/external/github.com/abseil/abseil-cpp.git@334aca32051ef6ede2711487acf45d959e9bdffc",
-  "third_party/externals/dng_sdk"                : "https://android.googlesource.com/platform/external/dng_sdk.git@c8d0c9b1d16bfda56f15165d39e0ffa360a11123",
-  "third_party/externals/egl-registry"           : "https://skia.googlesource.com/external/github.com/KhronosGroup/EGL-Registry@b055c9b483e70ecd57b3cf7204db21f5a06f9ffe",
-  "third_party/externals/emsdk"                  : "https://skia.googlesource.com/external/github.com/emscripten-core/emsdk.git@a896e3d066448b3530dbcaa48869fafefd738f57",
-  "third_party/externals/expat"                  : "https://chromium.googlesource.com/external/github.com/libexpat/libexpat.git@441f98d02deafd9b090aea568282b28f66a50e36",
-  "third_party/externals/freetype"               : "https://chromium.googlesource.com/chromium/src/third_party/freetype2.git@f42ce25563b73fed0123d18a2556b9ba01d2c76b",
-  "third_party/externals/harfbuzz"               : "https://chromium.googlesource.com/external/github.com/harfbuzz/harfbuzz.git@c053e8f29257814e11ad61493dbbe29f27656de4",
-  "third_party/externals/highway"                : "https://chromium.googlesource.com/external/github.com/google/highway.git@424360251cdcfc314cfc528f53c872ecd63af0f0",
-  "third_party/externals/icu"                    : "https://chromium.googlesource.com/chromium/deps/icu.git@a0718d4f121727e30b8d52c7a189ebf5ab52421f",
-  "third_party/externals/icu4x"                  : "https://chromium.googlesource.com/external/github.com/unicode-org/icu4x.git@bcf4f7198d4dc5f3127e84a6ca657c88e7d07a13",
-  "third_party/externals/imgui"                  : "https://skia.googlesource.com/external/github.com/ocornut/imgui.git@55d35d8387c15bf0cfd71861df67af8cfbda7456",
-  "third_party/externals/libavif"                : "https://skia.googlesource.com/external/github.com/AOMediaCodec/libavif.git@55aab4ac0607ab651055d354d64c4615cf3d8000",
-  "third_party/externals/libgav1"                : "https://chromium.googlesource.com/codecs/libgav1.git@5cf722e659014ebaf2f573a6dd935116d36eadf1",
-  "third_party/externals/libgrapheme"            : "https://skia.googlesource.com/external/github.com/FRIGN/libgrapheme/@c0cab63c5300fa12284194fbef57aa2ed62a94c0",
-  "third_party/externals/libjpeg-turbo"          : "https://chromium.googlesource.com/chromium/deps/libjpeg_turbo.git@ed683925e4897a84b3bffc5c1414c85b97a129a3",
-  "third_party/externals/libjxl"                 : "https://chromium.googlesource.com/external/gitlab.com/wg1/jpeg-xl.git@a205468bc5d3a353fb15dae2398a101dff52f2d3",
-  "third_party/externals/libpng"                 : "https://skia.googlesource.com/third_party/libpng.git@144b348e072a78e8130ed0acc452c9f039a67bf2",
-  "third_party/externals/libwebp"                : "https://chromium.googlesource.com/webm/libwebp.git@2af26267cdfcb63a88e5c74a85927a12d6ca1d76",
-  "third_party/externals/libyuv"                 : "https://chromium.googlesource.com/libyuv/libyuv.git@d248929c059ff7629a85333699717d7a677d8d96",
-  "third_party/externals/microhttpd"             : "https://android.googlesource.com/platform/external/libmicrohttpd@748945ec6f1c67b7efc934ab0808e1d32f2fb98d",
-  "third_party/externals/oboe"                   : "https://chromium.googlesource.com/external/github.com/google/oboe.git@b02a12d1dd821118763debec6b83d00a8a0ee419",
-  "third_party/externals/opengl-registry"        : "https://skia.googlesource.com/external/github.com/KhronosGroup/OpenGL-Registry@14b80ebeab022b2c78f84a573f01028c96075553",
-  "third_party/externals/perfetto"               : "https://android.googlesource.com/platform/external/perfetto@93885509be1c9240bc55fa515ceb34811e54a394",
-  "third_party/externals/piex"                   : "https://android.googlesource.com/platform/external/piex.git@bb217acdca1cc0c16b704669dd6f91a1b509c406",
-  "third_party/externals/swiftshader"            : "https://swiftshader.googlesource.com/SwiftShader@62c59c41e194c288c06739788bb0aad3c86b19bf",
-  "third_party/externals/vulkanmemoryallocator"  : "https://chromium.googlesource.com/external/github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator@a6bfc237255a6bac1513f7c1ebde6d8aed6b5191",
+  "third_party/externals/dawn"                   : "https://gitee.com/openeuler-graphics/dawn.git@1a27c55aa520497270371c99fa45c173226b580e",
+  "third_party/externals/jinja2"                 : "https://gitee.com/openeuler-graphics/jinja2.git@ee69aa00ee8536f61db6a451f3858745cf587de6",
+  "third_party/externals/markupsafe"             : "https://gitee.com/openeuler-graphics/markupsafe.git@1b882ef6372b58bfd55a3285f37ed801be9137cd",
+  "third_party/externals/abseil-cpp"             : "https://github.com/abseil/abseil-cpp.git@edbf66288b7e21c33b39512affc593ff7c3e18fd",
+  "third_party/externals/dng_sdk"                : "https://gitee.com/openeuler-graphics/dng_sdk.git@d5dd8af06e1b4c3bcd96a4de4bf1b8f1fbf1cbd5",
+  "third_party/externals/egl-registry"           : "https://github.com/KhronosGroup/EGL-Registry.git@af97e2c27b49a090a335fc6ed5040c780ad9fec8",
+  "third_party/externals/emsdk"                  : "https://github.com/emscripten-core/emsdk.git@e8606a7e3bfb86e86831f43db19ee639f3996532",
+  "third_party/externals/expat"                  : "https://github.com/libexpat/libexpat.git@441f98d02deafd9b090aea568282b28f66a50e36",
+  "third_party/externals/freetype"               : "https://gitlab.freedesktop.org/freetype/freetype.git@47e61d02e6efb00d9e3c2b38d7fc3211a7514c7f",
+  "third_party/externals/harfbuzz"               : "https://github.com/harfbuzz/harfbuzz.git@04c5e46ac6258cc7fafda479cfce1594edb90a2b",
+  "third_party/externals/highway"                : "https://github.com/google/highway.git@e7e9056e5bc4799d88f7d235a032b53e2cd45357",
+  "third_party/externals/icu"                    : "https://gitee.com/openeuler-graphics/icu.git@20f8ac695af59b6c830def7d4e95bfeb13dd7be5",
+  "third_party/externals/icu4x"                  : "https://github.com/unicode-org/icu4x.git@4f81635489681ecf7707623177123cb78d6a66a0",
+  "third_party/externals/imgui"                  : "https://github.com/ocornut/imgui.git@666b93e989f1f3fe3395de942d45480f5cdb32a9",
+  "third_party/externals/libavif"                : "https://github.com/AOMediaCodec/libavif.git@adc70f01f517134e4a350396fc6ea59b23f7ce5b",
+  "third_party/externals/libgav1"                : "https://gitee.com/openeuler-graphics/libgav1.git@a471704c25f7e5ae0d9fccb4bc400d43a3b17952",
+  "third_party/externals/libgrapheme"            : "https://github.com/FRIGN/libgrapheme/@c0cab63c5300fa12284194fbef57aa2ed62a94c0",
+  "third_party/externals/libjpeg-turbo"          : "https://gitee.com/openeuler-graphics/libjpeg_turbo.git@ed683925e4897a84b3bffc5c1414c85b97a129a3",
+  "third_party/externals/libjxl"                 : "https://github.com/libjxl/libjxl.git@9a75a15acd5a2fede19808fdbc7df826f6d9d573",
+  "third_party/externals/libpng"                 : "https://github.com/glennrp/libpng.git@04c016d79f97eb072c601787a4bc1b039a500025",
+  "third_party/externals/libwebp"                : "https://github.com/webmproject/libwebp.git@3f73e8f7ac83e97a26346886b529b61809a839f5",
+  "third_party/externals/libyuv"                 : "https://gitee.com/openeuler-graphics/libyuv.git@f9fda6e7d819c07a684ba6bc97cbf0e257bbcb37",
+  "third_party/externals/microhttpd"             : "https://gitee.com/openeuler-graphics/libmicrohttpd.git@e2128e8efa77b37ff30e945d5d71f356757a266c",
+  "third_party/externals/oboe"                   : "https://github.com/google/oboe.git@11ea86592ef8312c9a5cf6debf29809c3775dc50",
+  "third_party/externals/opengl-registry"        : "https://github.com/KhronosGroup/OpenGL-Registry.git@5bae8738b23d06968e7c3a41308568120943ae77",
+  "third_party/externals/perfetto"               : "https://github.com/google/perfetto.git@008a2ca9b9db87584723a23962e690296c832f84",
+  "third_party/externals/piex"                   : "https://github.com/google/piex.git@f1e15dd837c04347504149f71db67a78fbeddc73",
+  "third_party/externals/swiftshader"            : "https://github.com/google/swiftshader.git@aac11f84562f3e8c0581d9efda0ca308e8aa8334",
+  "third_party/externals/vulkanmemoryallocator"  : "https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator.git@936bc4b57e7ffa5906a786735537c5493224e7d6",
   # vulkan-deps is a meta-repo containing several interdependent Khronos Vulkan repositories.
   # When the vulkan-deps revision is updated, those repos (spirv-*, vulkan-*) should be updated as well.
-  "third_party/externals/vulkan-deps"            : "https://chromium.googlesource.com/vulkan-deps@7922b393e32bbd84a2a3d83f3b887dfde496a046",
-  "third_party/externals/spirv-cross"            : "https://chromium.googlesource.com/external/github.com/KhronosGroup/SPIRV-Cross@b8fcf307f1f347089e3c46eb4451d27f32ebc8d3",
-  "third_party/externals/spirv-headers"          : "https://skia.googlesource.com/external/github.com/KhronosGroup/SPIRV-Headers.git@4f7b471f1a66b6d06462cd4ba57628cc0cd087d7",
-  "third_party/externals/spirv-tools"            : "https://skia.googlesource.com/external/github.com/KhronosGroup/SPIRV-Tools.git@02470f606fe1571de808cb773d8c521ab201aaff",
-  "third_party/externals/vello"                  : "https://skia.googlesource.com/external/github.com/linebender/vello.git@74715ee4650ec3f4483ccc86540b32d15d5bfaa3",
-  "third_party/externals/vulkan-headers"         : "https://chromium.googlesource.com/external/github.com/KhronosGroup/Vulkan-Headers@cfebfc96b2b0bce93da7d12f2c14cc01793ae25c",
-  "third_party/externals/vulkan-tools"           : "https://chromium.googlesource.com/external/github.com/KhronosGroup/Vulkan-Tools@d14404b26e17086a707ea6ff5f7342ed5b9938ca",
-  "third_party/externals/vulkan-utility-libraries": "https://chromium.googlesource.com/external/github.com/KhronosGroup/Vulkan-Utility-Libraries@72696f278218d39171678e41d8f43cff9905c513",
-  "third_party/externals/unicodetools"           : "https://chromium.googlesource.com/external/github.com/unicode-org/unicodetools@66a3fa9dbdca3b67053a483d130564eabc5fe095",
+  "third_party/externals/vulkan-deps"            : "https://gitee.com/openeuler-graphics/vulkan-deps.git@ab0162f2502552025362466e5d5a03685a4e282c",
+  "third_party/externals/spirv-cross"            : "https://github.com/KhronosGroup/SPIRV-Cross.git@edd66a2fc9e932ad0d3dce78f2627eeae91c2660",
+  "third_party/externals/spirv-headers"          : "https://github.com/KhronosGroup/SPIRV-Headers.git@47f2465ee3e78ec5ec38f00b2c405d9475797228",
+  "third_party/externals/spirv-tools"            : "https://github.com/KhronosGroup/SPIRV-Tools.git@8ea3ae6be2b2409e6c44eba3c17006e2fa0845f2",
+  "third_party/externals/vello"                  : "https://github.com/linebender/vello.git@6d57093cc275589843766b8c898793f8147ed323",
+  "third_party/externals/vulkan-headers"         : "https://github.com/KhronosGroup/Vulkan-Headers.git@29c0457cc167bfc9e9361a3818440e388986f5b5",
+  "third_party/externals/vulkan-tools"           : "https://github.com/KhronosGroup/Vulkan-Tools.git@c4839afe758d3c8fb5c46792398509b4fee0a28a",
+  "third_party/externals/vulkan-utility-libraries": "https://github.com/KhronosGroup/Vulkan-Utility-Libraries@1fb77ad1d40ee127834436d92efc3a0e626dd91f",
+  "third_party/externals/unicodetools"           : "https://github.com/unicode-org/unicodetools@66a3fa9dbdca3b67053a483d130564eabc5fe095",
   #"third_party/externals/v8"                     : "https://chromium.googlesource.com/v8/v8.git@5f1ae66d5634e43563b2d25ea652dfb94c31a3b4",
-  "third_party/externals/wuffs"                  : "https://skia.googlesource.com/external/github.com/google/wuffs-mirror-release-c.git@e3f919ccfe3ef542cfc983a82146070258fb57f8",
-  "third_party/externals/zlib"                   : "https://chromium.googlesource.com/chromium/src/third_party/zlib@646b7f569718921d7d4b5b8e22572ff6c76f2596",
+  "third_party/externals/wuffs"                  : "https://github.com/google/wuffs-mirror-release-c.git@fe9d08f2b6e80af691bfb1a718e144c49a1b9eba",
+  "third_party/externals/zlib"                   : "https://github.com/QPDFium/zlib.git@6da1d53b97c89b07e47714d88cab61f1ce003c68",
 
   'bin': {
     'packages': [
diff --git a/gn/toolchain/BUILD.gn b/gn/toolchain/BUILD.gn
index 4d4abc952f..5ae6db1d00 100644
--- a/gn/toolchain/BUILD.gn
+++ b/gn/toolchain/BUILD.gn
@@ -138,7 +138,7 @@ template("msvc_toolchain") {
       pdbname = "{{target_out_dir}}/{{label_name}}_c.pdb"
 
       # Label names may have spaces so pdbname must be quoted.
-      command = "$env_setup $cc_wrapper $cl /nologo /showIncludes /FC {{defines}} {{include_dirs}} {{cflags}} $cl_m32_flag {{cflags_c}} /c {{source}} /Fo{{output}} /Fd\"$pdbname\""
+      command = "$env_setup $cc_wrapper $cl /nologo /FC {{defines}} {{include_dirs}} {{cflags}} $cl_m32_flag {{cflags_c}} /c {{source}} /Fo{{output}} /Fd\"$pdbname\""
       depsformat = "msvc"
       outputs = [
         "{{source_out_dir}}/{{target_output_name}}.{{source_name_part}}.obj",
@@ -151,7 +151,7 @@ template("msvc_toolchain") {
       pdbname = "{{target_out_dir}}/{{label_name}}_c.pdb"
 
       # Label names may have spaces so pdbname must be quoted.
-      command = "$env_setup $cc_wrapper $cl /nologo /showIncludes /FC {{defines}} {{include_dirs}} {{cflags}} $cl_m32_flag {{cflags_cc}} /c {{source}} /Fo{{output}} /Fd\"$pdbname\""
+      command = "$env_setup $cc_wrapper $cl /nologo /FC {{defines}} {{include_dirs}} {{cflags}} $cl_m32_flag {{cflags_cc}} /c {{source}} /Fo{{output}} /Fd\"$pdbname\""
       depsformat = "msvc"
       outputs = [
         "{{source_out_dir}}/{{target_output_name}}.{{source_name_part}}.obj",
diff --git a/include/core/SkFont.h b/include/core/SkFont.h
index e0c3533fd6..0c0a7744b3 100644
--- a/include/core/SkFont.h
+++ b/include/core/SkFont.h
@@ -245,7 +245,7 @@ public:
 
         @param tf  font and style used to draw text
     */
-    void setTypeface(sk_sp<SkTypeface> tf);
+    void setTypeface(const sk_sp<SkTypeface>& tf);
 
     /** Sets text size in points.
         Has no effect if textSize is not greater than or equal to zero.
diff --git a/include/core/SkPaint.h b/include/core/SkPaint.h
index 300f0ea088..da464eba78 100644
--- a/include/core/SkPaint.h
+++ b/include/core/SkPaint.h
@@ -416,7 +416,7 @@ public:
         example: https://fiddle.skia.org/c/@Color_Filter_Methods
         example: https://fiddle.skia.org/c/@Paint_setShader
     */
-    void setShader(sk_sp<SkShader> shader);
+    void setShader(const sk_sp<SkShader>& shader);
 
     /** Returns SkColorFilter if set, or nullptr.
         Does not alter SkColorFilter SkRefCnt.
@@ -444,7 +444,7 @@ public:
         example: https://fiddle.skia.org/c/@Blend_Mode_Methods
         example: https://fiddle.skia.org/c/@Paint_setColorFilter
     */
-    void setColorFilter(sk_sp<SkColorFilter> colorFilter);
+    void setColorFilter(const sk_sp<SkColorFilter>& colorFilter);
 
     /** If the current blender can be represented as a SkBlendMode enum, this returns that
      *  enum in the optional's value(). If it cannot, then the returned optional does not
@@ -524,7 +524,7 @@ public:
         example: https://fiddle.skia.org/c/@Mask_Filter_Methods
         example: https://fiddle.skia.org/c/@Paint_setPathEffect
     */
-    void setPathEffect(sk_sp<SkPathEffect> pathEffect);
+    void setPathEffect(const sk_sp<SkPathEffect>& pathEffect);
 
     /** Returns SkMaskFilter if set, or nullptr.
         Does not alter SkMaskFilter SkRefCnt.
@@ -554,7 +554,7 @@ public:
         example: https://fiddle.skia.org/c/@Paint_setMaskFilter
         example: https://fiddle.skia.org/c/@Typeface_Methods
     */
-    void setMaskFilter(sk_sp<SkMaskFilter> maskFilter);
+    void setMaskFilter(const sk_sp<SkMaskFilter>& maskFilter);
 
     /** Returns SkImageFilter if set, or nullptr.
         Does not alter SkImageFilter SkRefCnt.
@@ -582,7 +582,7 @@ public:
 
         example: https://fiddle.skia.org/c/@Paint_setImageFilter
     */
-    void setImageFilter(sk_sp<SkImageFilter> imageFilter);
+    void setImageFilter(const sk_sp<SkImageFilter>& imageFilter);
 
     /** Returns true if SkPaint prevents all drawing;
         otherwise, the SkPaint may or may not allow drawing.
diff --git a/include/effects/SkImageFilters.h b/include/effects/SkImageFilters.h
index 926896f9ed..a8c281fce0 100644
--- a/include/effects/SkImageFilters.h
+++ b/include/effects/SkImageFilters.h
@@ -121,11 +121,11 @@ public:
      *  @param cropRect Optional rectangle that crops the input and output.
      */
     static sk_sp<SkImageFilter> Blur(SkScalar sigmaX, SkScalar sigmaY, SkTileMode tileMode,
-                                     sk_sp<SkImageFilter> input, const CropRect& cropRect = {});
+                                     const sk_sp<SkImageFilter>& input, const CropRect& cropRect = {});
     // As above, but defaults to the decal tile mode.
-    static sk_sp<SkImageFilter> Blur(SkScalar sigmaX, SkScalar sigmaY, sk_sp<SkImageFilter> input,
+    static sk_sp<SkImageFilter> Blur(SkScalar sigmaX, SkScalar sigmaY, const sk_sp<SkImageFilter>& input,
                                      const CropRect& cropRect = {}) {
-        return Blur(sigmaX, sigmaY, SkTileMode::kDecal, std::move(input), cropRect);
+        return Blur(sigmaX, sigmaY, SkTileMode::kDecal, input, cropRect);
     }
 
     /**
diff --git a/modules/skplaintexteditor/include/editor.h b/modules/skplaintexteditor/include/editor.h
index e4f5c123f5..43b4c9cf53 100644
--- a/modules/skplaintexteditor/include/editor.h
+++ b/modules/skplaintexteditor/include/editor.h
@@ -123,7 +123,7 @@ private:
     SkFont fFont;
     sk_sp<SkFontMgr> fFontMgr;
     bool fNeedsReshape = false;
-    const char* fLocale = "en";  // TODO: make this setable
+    const char* fLocale = "zh_CN.UTF-8"; // TODO: make this setable
 
     void markDirty(TextLine*);
     void reshapeAll();
diff --git a/modules/skplaintexteditor/src/shape.cpp b/modules/skplaintexteditor/src/shape.cpp
index be4acff9a7..2b3f8fed43 100644
--- a/modules/skplaintexteditor/src/shape.cpp
+++ b/modules/skplaintexteditor/src/shape.cpp
@@ -279,6 +279,9 @@ static void set_character_bounds(void* context,
         if (codePointCount == 1) {  // single codepoint, fast path.
             cursors[textBegin] = clusterBox;
             continue;
+        } 
+        else if (codePointCount == -1) {
+            continue;
         }
 
         float width = clusterBox.width() / codePointCount;
diff --git a/modules/skplaintexteditor/src/word_boundaries.cpp b/modules/skplaintexteditor/src/word_boundaries.cpp
index 4390ef4297..715e6a1bbb 100644
--- a/modules/skplaintexteditor/src/word_boundaries.cpp
+++ b/modules/skplaintexteditor/src/word_boundaries.cpp
@@ -52,7 +52,9 @@ std::vector<bool> GetUtf8WordBoundaries(const char* begin, size_t byteCount, con
     std::vector<bool> result;
     result.resize(byteCount);
     for (auto& pos : positions) {
-        result[pos] = true;
+        if (pos < result.size()) {
+            result[pos] = true;
+        }        
     }
     return result;
 }
diff --git a/modules/skshaper/src/SkShaper_harfbuzz.cpp b/modules/skshaper/src/SkShaper_harfbuzz.cpp
index 0653857744..72920a0084 100644
--- a/modules/skshaper/src/SkShaper_harfbuzz.cpp
+++ b/modules/skshaper/src/SkShaper_harfbuzz.cpp
@@ -893,40 +893,70 @@ void ShaperDrivenWrapper::wrap(char const * const utf8, size_t utf8Bytes,
             bool bestUsesModelForGlyphs = false;
             SkScalar widthLeft = width - line.fAdvance.fX;
 
-            for (int32_t breakIteratorCurrent = breakIterator.next();
-                 !breakIterator.isDone();
-                 breakIteratorCurrent = breakIterator.next())
-            {
-                // TODO: if past a safe to break, future safe to break will be at least as long
-
-                // TODO: adjust breakIteratorCurrent by ignorable whitespace
-                bool candidateUsesModelForGlyphs = false;
-                ShapedRun candidate = [&](const TextProps& props){
-                    if (props.glyphLen) {
-                        candidateUsesModelForGlyphs = true;
-                        return ShapedRun(RunHandler::Range(utf8Start - utf8, breakIteratorCurrent),
-                                         font.currentFont(), bidi.currentLevel(),
-                                         std::unique_ptr<ShapedGlyph[]>(),
-                                         props.glyphLen - modelGlyphOffset,
-                                         props.advance - modelAdvanceOffset);
-                    } else {
-                        return shape(utf8, utf8Bytes,
-                                     utf8Start, utf8Start + breakIteratorCurrent,
-                                     bidi, language, script, font,
-                                     features, featuresSize);
+            for (int32_t stage = 0; stage < 2; ++stage) {
+                std::vector<int32_t> breakIterators;
+                if (stage == 0) {
+                    for (int32_t breakIteratorCurrent = breakIterator.next();
+                         !breakIterator.isDone();
+                         breakIteratorCurrent = breakIterator.next()) {
+                        breakIterators.push_back(breakIteratorCurrent);
                     }
-                }(modelText[breakIteratorCurrent + modelTextOffset]);
-                auto score = [widthLeft](const ShapedRun& run) -> SkScalar {
-                    if (run.fAdvance.fX < widthLeft) {
-                        return run.fUtf8Range.size();
-                    } else {
-                        return widthLeft - run.fAdvance.fX;
+                } else {
+                    for (int32_t breakIteratorCurrent = 1;
+                         (breakIteratorCurrent - 1) < utf8runLength;
+                         breakIteratorCurrent++) {
+                        breakIterators.push_back(breakIteratorCurrent);
                     }
-                };
-                if (bestIsInvalid || score(best) < score(candidate)) {
-                    best = std::move(candidate);
-                    bestIsInvalid = false;
-                    bestUsesModelForGlyphs = candidateUsesModelForGlyphs;
+                }
+
+                const size_t breakIteratorCount = breakIterators.size();
+                for (size_t index = 0; index < breakIteratorCount; ++index) {
+                    int32_t breakIteratorCurrent = breakIterators[index];
+                    // TODO: if past a safe to break, future safe to break will be at least as long
+
+                    // TODO: adjust breakIteratorCurrent by ignorable whitespace
+                    bool candidateUsesModelForGlyphs = false;
+                    ShapedRun candidate = [&](const TextProps& props) {
+                        if (props.glyphLen) {
+                            candidateUsesModelForGlyphs = true;
+                            return ShapedRun(
+                                    RunHandler::Range(utf8Start - utf8, breakIteratorCurrent),
+                                    font.currentFont(),
+                                    bidi.currentLevel(),
+                                    std::unique_ptr<ShapedGlyph[]>(),
+                                    props.glyphLen - modelGlyphOffset,
+                                    props.advance - modelAdvanceOffset);
+                        } else {
+                            return shape(utf8,
+                                         utf8Bytes,
+                                         utf8Start,
+                                         utf8Start + breakIteratorCurrent,
+                                         bidi,
+                                         language,
+                                         script,
+                                         font,
+                                         features,
+                                         featuresSize);
+                        }
+                    }(modelText[breakIteratorCurrent + modelTextOffset]);
+                    auto score = [widthLeft](const ShapedRun& run) -> SkScalar {
+                        if (run.fAdvance.fX < widthLeft) {
+                            return run.fUtf8Range.size();
+                        } else {
+                            return widthLeft - run.fAdvance.fX;
+                        }
+                    };
+                    if (bestIsInvalid || score(best) < score(candidate)) {
+                        best = std::move(candidate);
+                        bestIsInvalid = false;
+                        bestUsesModelForGlyphs = candidateUsesModelForGlyphs;
+                    }                    
+                }
+                if (width < line.fAdvance.fX + best.fAdvance.fX) {
+                    bestIsInvalid = true;
+                    bestUsesModelForGlyphs = false;
+                } else {
+                    break;
                 }
             }
 
diff --git a/src/core/SkFont.cpp b/src/core/SkFont.cpp
index 7fd94eaa43..9cc1c1acb0 100644
--- a/src/core/SkFont.cpp
+++ b/src/core/SkFont.cpp
@@ -86,8 +86,8 @@ void SkFont::dump() const {
     SkDebugf("hinting %d\n", (unsigned)fHinting);
 }
 
-void SkFont::setTypeface(sk_sp<SkTypeface> tf) {
-    fTypeface = std::move(tf);
+void SkFont::setTypeface(const sk_sp<SkTypeface>& tf) {
+    fTypeface = tf;
     if (!fTypeface) {
         fTypeface = SkTypeface::MakeEmpty();
     }
diff --git a/src/core/SkPaint.cpp b/src/core/SkPaint.cpp
index 3e9037b7a2..bccc2f9ba5 100644
--- a/src/core/SkPaint.cpp
+++ b/src/core/SkPaint.cpp
@@ -90,7 +90,7 @@ DEFINE_FIELD_REF(Shader)
 #undef DEFINE_FIELD_REF
 
 #define DEFINE_FIELD_SET(Field) \
-    void SkPaint::set##Field(sk_sp<Sk##Field> f) { f##Field = std::move(f); }
+    void SkPaint::set##Field(const sk_sp<Sk##Field>& f) { f##Field = f; }
 DEFINE_FIELD_SET(ColorFilter)
 DEFINE_FIELD_SET(ImageFilter)
 DEFINE_FIELD_SET(MaskFilter)
diff --git a/src/effects/imagefilters/SkBlurImageFilter.cpp b/src/effects/imagefilters/SkBlurImageFilter.cpp
index 291c33c315..1ec00648f8 100644
--- a/src/effects/imagefilters/SkBlurImageFilter.cpp
+++ b/src/effects/imagefilters/SkBlurImageFilter.cpp
@@ -60,7 +60,7 @@ public:
             : SkImageFilter_Base(&input, 1)
             , fSigma{sigma} {}
 
-    SkBlurImageFilter(SkSize sigma, SkTileMode legacyTileMode, sk_sp<SkImageFilter> input)
+    SkBlurImageFilter(SkSize sigma, SkTileMode legacyTileMode, const sk_sp<SkImageFilter>& input)
             : SkImageFilter_Base(&input, 1)
             , fSigma(sigma)
             , fLegacyTileMode(legacyTileMode) {}
@@ -105,7 +105,7 @@ private:
 } // end namespace
 
 sk_sp<SkImageFilter> SkImageFilters::Blur(
-        SkScalar sigmaX, SkScalar sigmaY, SkTileMode tileMode, sk_sp<SkImageFilter> input,
+        SkScalar sigmaX, SkScalar sigmaY, SkTileMode tileMode, const sk_sp<SkImageFilter>& input,
         const CropRect& cropRect) {
     if (!SkScalarsAreFinite(sigmaX, sigmaY) || sigmaX < 0.f || sigmaY < 0.f) {
         // Non-finite or negative sigmas are error conditions. We allow 0 sigma for X and/or Y
@@ -116,12 +116,12 @@ sk_sp<SkImageFilter> SkImageFilters::Blur(
 
     // Temporarily allow tiling with no crop rect
     if (tileMode != SkTileMode::kDecal && !cropRect) {
-        return sk_make_sp<SkBlurImageFilter>(SkSize{sigmaX, sigmaY}, tileMode, std::move(input));
+        return sk_make_sp<SkBlurImageFilter>(SkSize{sigmaX, sigmaY}, tileMode, input);
     }
 
     // The 'tileMode' behavior is not well-defined if there is no crop. We only apply it if
     // there is a provided 'cropRect'.
-    sk_sp<SkImageFilter> filter = std::move(input);
+    sk_sp<SkImageFilter> filter = input;
     if (tileMode != SkTileMode::kDecal && cropRect) {
         // Historically the input image was restricted to the cropRect when tiling was not
         // kDecal, so that the kernel evaluated the tiled edge conditions, while a kDecal crop
diff --git a/third_party/expat/include/expat_config/expat_config.h b/third_party/expat/include/expat_config/expat_config.h
index b823e3708e..298c3ed33f 100644
--- a/third_party/expat/include/expat_config/expat_config.h
+++ b/third_party/expat/include/expat_config/expat_config.h
@@ -125,9 +125,17 @@
 /* Define to make parameter entity parsing functionality available. */
 #define XML_DTD 1
 
+/* Define as 1/0 to enable/disable support for general entities. */
+#define XML_GE 1
+
 /* Define to make XML Namespaces functionality available. */
 #define XML_NS 1
 
+/* Define to __FUNCTION__ or "" if `__func__' does not conform to ANSI C. */
+#ifdef _MSC_VER
+#define __func__ __FUNCTION__
+#endif
+
 /* Define to empty if `const' does not conform to ANSI C. */
 /* #undef const */
 
diff --git a/third_party/icu/icu.gni b/third_party/icu/icu.gni
index 3af3281a06..9d6c875d2b 100644
--- a/third_party/icu/icu.gni
+++ b/third_party/icu/icu.gni
@@ -35,6 +35,7 @@ icu_sources = [
   "$_src/common/dictionarydata.h",
   "$_src/common/dtintrv.cpp",
   "$_src/common/edits.cpp",
+  "$_src/common/emojiprops.cpp",
   "$_src/common/errorcode.cpp",
   "$_src/common/filteredbrk.cpp",
   "$_src/common/filterednormalizer2.cpp",
@@ -57,6 +58,8 @@ icu_sources = [
   "$_src/common/locresdata.cpp",
   "$_src/common/locutil.cpp",
   "$_src/common/locutil.h",
+  "$_src/common/lstmbe.cpp",
+  "$_src/common/lstmbe.h",
   "$_src/common/messageimpl.h",
   "$_src/common/messagepattern.cpp",
   "$_src/common/msvcres.h",
diff --git a/third_party/libwebp/BUILD.gn b/third_party/libwebp/BUILD.gn
index 5501ce1e22..c6e95e237d 100644
--- a/third_party/libwebp/BUILD.gn
+++ b/third_party/libwebp/BUILD.gn
@@ -177,6 +177,7 @@ if (skia_use_system_libwebp) {
       "../externals/libwebp/src/utils/rescaler_utils.c",
       "../externals/libwebp/src/utils/thread_utils.c",
       "../externals/libwebp/src/utils/utils.c",
+      "../externals/libwebp/src/utils/palette.c",
     ]
   }
 }
diff --git a/tools/git-sync-deps b/tools/git-sync-deps
index 1efb98d055..bba338bd1d 100755
--- a/tools/git-sync-deps
+++ b/tools/git-sync-deps
@@ -133,9 +133,8 @@ def git_checkout_to_directory(git, repo, commithash, directory, shallow, verbose
   """
   if not os.path.isdir(directory):
     subprocess.check_call(
-      [git, 'clone', '--quiet', *(['--depth=1'] if shallow else []),
-       '--no-checkout', repo, directory])
-
+      [git, 'clone', '--quiet', repo, directory])
+    
   if not is_git_toplevel(git, directory):
     # if the directory exists, but isn't a git repo, you will modify
     # the parent repository, which isn't what you want.
@@ -147,27 +146,7 @@ def git_checkout_to_directory(git, repo, commithash, directory, shallow, verbose
     sys.stdout.write('%s\n  SYNC IS DISABLED.\n' % directory)
     return
 
-  with open(os.devnull, 'w') as devnull:
-    # If this fails, we will fetch before trying again.  Don't spam user
-    # with error infomation.
-    if 0 == subprocess.call([git, 'checkout', '--quiet', commithash],
-                            cwd=directory, stderr=devnull):
-      # if this succeeds, skip slow `git fetch`.
-      if verbose:
-        status(directory, commithash, False)  # Success.
-      return
-
-  # If the repo has changed, always force use of the correct repo.
-  # If origin already points to repo, this is a quick no-op.
-  subprocess.check_call(
-      [git, 'remote', 'set-url', 'origin', repo], cwd=directory)
-
-  subprocess.check_call(
-    [git, 'fetch', '--quiet',
-     *(['--depth=1', repo, commithash] if shallow else [])],
-    cwd=directory)
-
-  subprocess.check_call([git, 'checkout', '--quiet', commithash], cwd=directory)
+  subprocess.check_call([git, 'pull', '--quiet', '--no-rebase', 'origin'], cwd=directory)
 
   if verbose:
     status(directory, commithash, True)  # Success.
@@ -257,7 +236,7 @@ def multithread(function, list_of_arg_lists):
 def main(argv):
   deps_file_path = os.environ.get('GIT_SYNC_DEPS_PATH', DEFAULT_DEPS_PATH)
   verbose = not bool(os.environ.get('GIT_SYNC_DEPS_QUIET', False))
-  skip_emsdk = bool(os.environ.get('GIT_SYNC_DEPS_SKIP_EMSDK', False))
+  skip_emsdk = bool(os.environ.get('GIT_SYNC_DEPS_SKIP_EMSDK', True))
   shallow = not ('--deep' in argv)
 
   if '--help' in argv or '-h' in argv:
@@ -265,9 +244,9 @@ def main(argv):
     return 1
 
   git_sync_deps(deps_file_path, argv, shallow, verbose)
-  subprocess.check_call(
-      [sys.executable,
-       os.path.join(os.path.dirname(deps_file_path), 'bin', 'fetch-gn')])
+#  subprocess.check_call(
+#      [sys.executable,
+#       os.path.join(os.path.dirname(deps_file_path), 'bin', 'fetch-gn')])
   if not skip_emsdk:
     subprocess.check_call(
         [sys.executable,
diff --git a/tools/viewer/ImGuiLayer.h b/tools/viewer/ImGuiLayer.h
index b386f04953..4d75561b60 100644
--- a/tools/viewer/ImGuiLayer.h
+++ b/tools/viewer/ImGuiLayer.h
@@ -51,7 +51,7 @@ struct DragCanvas {
             aspect = h / w;
         }
 
-        float availWidth = std::max(ImGui::GetContentRegionAvailWidth(), 1.0f);
+        float availWidth = std::max(ImGui::GetContentRegionAvail().x, 1.0f);
         fPos = ImGui::GetCursorScreenPos();
         fSize = ImVec2(availWidth, availWidth * aspect);
 
diff --git a/tools/viewer/Viewer.cpp b/tools/viewer/Viewer.cpp
index 66da8fe75d..94781e0c95 100644
--- a/tools/viewer/Viewer.cpp
+++ b/tools/viewer/Viewer.cpp
@@ -2580,7 +2580,7 @@ void Viewer::drawImGui() {
             }
 
             if (fShowSlidePicker) {
-                ImGui::SetNextTreeNodeOpen(true);
+                ImGui::SetNextItemOpen(true, 0);
             }
             if (ImGui::CollapsingHeader("Slide")) {
                 static ImGuiTextFilter filter;
